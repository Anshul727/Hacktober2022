/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* reverseKGroup(ListNode* head, int k) {
        ListNode* check=head;
        for(int i=0;i<k;i++)
        {
            if(check==NULL)
                return head;
            check=check->next;
        }
        
        ListNode* prev=NULL;
        ListNode* curr=head;
        ListNode* temp;
        int cnt=1;
        while(curr!=NULL && cnt<=k)
        {
            temp=curr->next;
            curr->next=prev;
            prev=curr;
            curr=temp;
            cnt++;
        }
        
        if(temp!=NULL)
        {
            head->next=reverseKGroup(temp,k);
        }
        return prev;
    }
};
